[section Installation, compiling and linking]

The library is available from [@https://github.com/jll63/multimethods GitHub].

In addition, you will need:

* a C++11 compiler. The library has been tested with g++ 4.7.2 and clang++ 3.4.

* three Boost libraries: TypeTraits, Preprocessor and Dynamic
  Bitset. Make sure that environment variable `BOOST_ROOT` points to
  the root of your installation.

* cmake

The library consists in a static archive - libyomm11.a - and a set of header files.

Run the following commands:

   cmake
   make
   make test
   make install

These will build, test and install libyomm11.a and the header files in
the default locations. You can override this by passing
`-DCMAKE_INSTALL_PREFIX=<dir>` to cmake. The default compiler is
g++. Pass `-DCMAKE_CXX_COMPILER=clang++` if you want to use Clang.

Alternatively, you can add the library's `include` directory to the
include path and compile and link `src/multi_methods.cpp` directly
into your application.

Read [link multi_methods.advanced_topics.dynamic_linking this section]
if you intend to use shared libraries or dynamic linking.

[endsect]
